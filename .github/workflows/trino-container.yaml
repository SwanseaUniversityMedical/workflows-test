name: Trino Container

on:
  pull_request:
    # Ignore PRs on branches specifically intended for other assets
    branches-ignore:
      - '*/controller-container*'
      - '*/fizzbuzz-chart*'
      - '*/fizzbuzz-crds-chart*'
    # Only consider PRs that change files for this asset, including ci scripts
    paths:
      - '.github/workflows/trino-container.yaml'
      - 'containers/trino/**'
    # Make sure all workflows that are "required checks" for a given
    # branch protection rule have the same paths: and branches-ignore:
    # filters. Otherwise, you can end up in a deadlock waiting on a
    # required check that will never be executed.
  push:
    # Only release off of release and maintenance branches for this asset
    branches:
      - 'maintenance/trino-container/[0-9]+.x.x'
      - 'maintenance/trino-container/[0-9]+.[0-9]+.x'
      - 'main'
    # Only consider pushes that change files for this asset, including ci scripts
    paths:
      - '.github/workflows/trino-container.yaml'
      - 'containers/trino/**'

permissions:
  contents: write
  pull-requests: write
  actions: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  # Needed to generate releases safely
  cancel-in-progress: false

jobs:
  # Job name must be unique across repo to target
  # branch protection rules "required checks" properly!
  trino-container:
    uses: SwanseaUniversityMedical/workflows/.github/workflows/pr-and-release-container.yaml@feat/inuit-auto
    with:
      job-name: trino-container
      registry: ${{ vars.HARBOR_REGISTRY }}
      registry-user: ${{ vars.HARBOR_USER }}
      registry-repo: ${{ vars.HARBOR_PROJECT }}/trino
      release-tag-format: 'v${version}-trino-container'
      registry-extra-tag-command: >-
        cat containers/trino/Dockerfile | grep -m 1 "ARG BASE_VERSION=" | cut -d "=" -f 2
      cosign-public-key: ${{ vars.COSIGN_PUBLIC_KEY }}
      build-file: containers/trino/Dockerfile
      build-context: containers/trino
    secrets:
      cosign-private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
      cosign-password: ${{ secrets.COSIGN_PASSWORD }}
      registry-token: ${{ secrets.HARBOR_TOKEN }}
